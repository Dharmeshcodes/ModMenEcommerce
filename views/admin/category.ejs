<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Category Management</title>

  <!-- FontAwesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />

  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <style>
    /* Your existing styles here */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Arial', sans-serif;
      background: linear-gradient(to right, #1e3c72, #2a5298);
      color: #333;
      display: flex;
      min-height: 100vh;
    }

    .layout-container {
      display: flex;
      width: 100%;
      min-height: 100vh;
    }

    .main-content {
      flex: 1;
      display: flex;
      flex-direction: column;
    }

    .content-wrapper {
      flex: 1;
      padding: 20px;
      overflow-y: auto;
    }

    .breadcrumb {
      color: #fff;
      margin-bottom: 10px;
      font-size: 15px;
    }

    .breadcrumb a {
      color: #fff;
      text-decoration: none;
    }

    .top-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      margin-bottom: 10px;
    }

    .top-bar h2 {
      color: #fff;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .add-btn-top {
      background-color: #28a745;
      color: white;
      padding: 8px 16px;
      border-radius: 5px;
      font-weight: bold;
      border: none;
      text-decoration: none;
    }

    .subcategory-btn {
      background-color: #007bff;
      color: white;
      padding: 6px 14px;
      border-radius: 5px;
      font-weight: bold;
      border: none;
      text-decoration: none;
      cursor: pointer;
      font-size: 14px;
    }

    .search-sort {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      margin-bottom: 15px;
      gap: 10px;
    }

    .search-box input {
      padding: 6px 10px;
      border-radius: 5px;
      border: none;
      width: 200px;
    }

    .sort-box select {
      padding: 6px;
      border-radius: 5px;
      border: none;
    }

    .category-table-container {
      background: white;
      border-radius: 8px;
      overflow-x: auto;
      box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    }

    .table-header,
    .category-row {
      display: grid;
      grid-template-columns: 0.4fr 1.5fr 2fr 1fr 1fr 1fr 1.2fr 1fr 1fr;
      gap: 10px;
      padding: 15px;
      align-items: center;
      text-align: center;
      word-break: break-word;
    }

    .table-header {
      background: #111;
      color: #fff;
      font-weight: bold;
    }

    .category-row {
      border-bottom: 1px solid #eee;
      background: #f9f9f9;
    }

    .category-row:nth-child(even) {
      background: #f1f1f1;
    }

    .list-btn,
    .unlist-btn,
    .offer-btn {
      padding: 5px 12px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: bold;
      border: none;
      cursor: pointer;
    }

    .list-btn {
      background-color: #28a745;
      color: #fff;
    }

    .unlist-btn {
      background-color: #dc3545;
      color: #fff;
    }

    .offer-btn {
      background-color: #007bff;
      color: white;
    }

    .offer-container {
      display: flex;
      flex-direction: column;
      gap: 5px;
      align-items: center;
    }

    .offer-display {
      background: #e7f5ff;
      padding: 8px;
      border-radius: 5px;
      font-size: 12px;
      font-weight: bold;
      text-align: center;
      color: #1864ab;
      border: 1px solid #74c0fc;
      min-width: 120px;
      word-wrap: break-word;
    }

    .offer-actions {
      display: flex;
      gap: 5px;
    }

    .edit-offer-btn,
    .delete-offer-btn {
      padding: 3px 8px;
      border-radius: 15px;
      font-size: 10px;
      font-weight: bold;
      border: none;
      cursor: pointer;
    }

    .edit-offer-btn {
      background-color: #ffc107;
      color: #000;
    }

    .delete-offer-btn {
      background-color: #dc3545;
      color: #fff;
    }

    .icon-btn {
      color: blue;
      font-size: 16px;
      margin: 0 5px;
    }

    .pagination {
      padding: 10px;
      text-align: center;
      background: #fff;
    }

    .pagination-btn {
      padding: 5px 10px;
      border: 1px solid #ddd;
      background: #fff;
      margin: 2px;
      border-radius: 5px;
      text-decoration: none;
      color: #333;
    }

    .pagination-btn.active {
      background-color: #007bff;
      color: white;
      border-color: #007bff;
    }

    @media (max-width: 900px) {
      .layout-container {
        flex-direction: column;
      }
    }

    @media (max-width: 768px) {
      .content-wrapper {
        padding: 10px;
      }

      .table-header,
      .category-row {
        grid-template-columns: repeat(5, 1fr);
        font-size: 12px;
        word-break: break-word;
      }

      .search-sort,
      .top-bar {
        flex-direction: column;
        align-items: flex-start;
      }

      .add-btn-top {
        margin-top: 10px;
      }

      .offer-container {
        gap: 3px;
      }

      .offer-display {
        padding: 5px;
        font-size: 10px;
        min-width: 100px;
      }

      .edit-offer-btn,
      .delete-offer-btn {
        padding: 2px 6px;
        font-size: 9px;
      }
    }

    @media (max-width: 600px) {
      .layout-container {
        flex-direction: column;
      }
    }
  </style>
</head>
<body>
  <div class="layout-container">
    <!-- Sidebar -->
    <%- include('../partials/admin/sidebar') %>

    <!-- Main Content -->
    <div class="main-content">
      <!-- Header -->
      <%- include('../partials/admin/header') %>

      <!-- Content Wrapper -->
      <div class="content-wrapper">
        <div class="breadcrumb">
          <a href="/admin/dashboard">Dashboard</a> &gt; <span>Categories</span>
        </div>

        <!-- Flash Messages -->
        <div class="container mt-2">
          <% if (messages && messages.error_msg) { %>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
              <%= messages.error_msg %>
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          <% } %>
          <% if (messages && messages.success_msg) { %>
            <div class="alert alert-success alert-dismissible fade show" role="alert">
              <%= messages.success_msg %>
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          <% } %>
        </div>

        <div class="top-bar">
          <h2>
            Category
            <button class="subcategory-btn" onclick="location.href='/admin/subcategory'">View Subcategories</button>
          </h2>
          <a href="/admin/addCategory" class="add-btn-top">+ Add Category</a>
        </div>

        <div class="search-sort">
          <div class="search-box">
            <form method="GET" action="">
              <input type="text" name="search" placeholder="Search Category..." value="<%= search || '' %>" />
            </form>
          </div>
          <div class="sort-box">
            <form method="GET" action="">
              <select name="sort" onchange="this.form.submit()">
                <option value="">Sort By</option>
                <option value="price-low" <%= sort === 'price-low' ? 'selected' : '' %>>Price: Low to High</option>
                <option value="price-high" <%= sort === 'price-high' ? 'selected' : '' %>>Price: High to Low</option>
                <option value="latest" <%= sort === 'latest' ? 'selected' : '' %>>Newest</option>
              </select>
            </form>
          </div>
        </div>

        <div class="category-table-container">
          <div class="table-header">
            <div>SNO</div>
            <div>Category Name</div>
            <div>Subcategory</div>
            <div>Sales</div>
            <div>Stock</div>
            <div>Added</div>
            <div>List / Unlist</div>
            <div>Action</div>
            <div>Offer</div>
          </div>

          <% if (categoryData && categoryData.length > 0) { %>
            <% categoryData.forEach((category, index) => { %>
              <div class="category-row">
                <div><%= index + 1 + ((currentPage - 1) * 4) %></div>
                <div><%= category.name || 'N/A' %></div>
                <div>
                  <% if (category.subcategories && category.subcategories.length > 0) { %>
                    <%= category.subcategories.map(sc => sc.name || sc).join(', ') %>
                  <% } else { %>
                    <span style="color: #999;">No Subcategories</span>
                  <% } %>
                </div>
                <div><%= category.sales || 0 %></div>
                <div><%= category.stock || 0 %></div>
                <div><%= category.addedDate ? new Date(category.addedDate).toDateString() : 'N/A' %></div>

                <div>
                  <% if (category.isListed) { %>
                    <button class="unlist-btn" onclick="toggleListStatus('<%= category._id %>', false)">UNLIST</button>
                  <% } else { %>
                    <button class="list-btn" onclick="toggleListStatus('<%= category._id %>', true)">LIST</button>
                  <% } %>
                </div>

                <div>
                  <a href="/admin/viewCategory/<%= category._id %>" class="icon-btn" title="View Category">
                    <i class="fas fa-eye"></i>
                  </a>
                  <a href="/admin/editCategory/<%= category._id %>" class="icon-btn" title="Edit Category">
                    <i class="fas fa-edit"></i>
                  </a>
                </div>

                <div>
                  <% if (category.offer && category.offer.offerPercentage) { %>
                    <div class="offer-container">
                      <div class="offer-display">
                        <%= category.offer.offerPercentage %>% OFF
                      </div>
                      <div class="offer-actions">
                        <button class="edit-offer-btn" onclick="openOfferModal('<%= category._id %>', <%= category.offer.offerPercentage %>, <%= category.offer.maxRedeem || 0 %>, '<%= category.offer.startDate ? category.offer.startDate.toISOString().slice(0,10) : '' %>', '<%= category.offer.validUntil ? category.offer.validUntil.toISOString().slice(0,10) : '' %>')">Edit</button>
                        <button class="delete-offer-btn" onclick="deleteOffer('<%= category._id %>')">Delete</button>
                      </div>
                    </div>
                  <% } else { %>
                    <button class="offer-btn" onclick="openOfferModal('<%= category._id %>')">Add Offer</button>
                  <% } %>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div style="padding: 40px; text-align: center; color: #666;">
              <i class="fas fa-tags" style="font-size: 48px; margin-bottom: 16px; opacity: 0.5;"></i>
              <p>No categories found</p>
            </div>
          <% } %>

          <div class="pagination">
            <% if (currentPage > 1) { %>
              <a href="?page=<%= currentPage - 1 %><%= search ? '&search=' + search : '' %><%= sort ? '&sort=' + sort : '' %>" class="pagination-btn">&laquo;</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
              <a href="?page=<%= i %><%= search ? '&search=' + search : '' %><%= sort ? '&sort=' + sort : '' %>" class="pagination-btn <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
            <% } %>
            <% if (currentPage < totalPages) { %>
              <a href="?page=<%= currentPage + 1 %><%= search ? '&search=' + search : '' %><%= sort ? '&sort=' + sort : '' %>" class="pagination-btn">&raquo;</a>
            <% } %>
          </div>
        </div> 
      </div> 
    </div> 
  </div>

<script>
  function toggleListStatus(categoryId, isListed) {
    const actionText = isListed ? 'List' : 'Unlist';

    Swal.fire({
      title: `${actionText} Category`,
      text: `Are you sure you want to ${actionText.toLowerCase()} this category?`,
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: isListed ? '#28a745' : '#dc3545',
      cancelButtonColor: '#6c757d',
      confirmButtonText: 'OK',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch('/admin/toggleListStatus', {
          method: 'PATCH',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ categoryId, isListed })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire('Success!', data.message, 'success').then(() => location.reload());
          } else {
            Swal.fire('Error!', data.message || `Failed to ${actionText.toLowerCase()} category`, 'error');
          }
        })
        .catch(() => Swal.fire('Error!', 'Server error occurred', 'error'));
      }
    });
  }

  function openOfferModal(categoryId, existingOffer = '', maxRedeem = 0, startDate = '', validUntil = '') {
    const isEdit = existingOffer !== '';

    Swal.fire({
      title: `${isEdit ? 'Edit' : 'Add'} Category Offer`,
      html:
        `<input id="offerPercentage" type="number" min="1" max="100" class="swal2-input" placeholder="Offer % (1-100)" value="${existingOffer || ''}">` +
        `<input id="maxRedeem" type="number" min="0" class="swal2-input" placeholder="Max Redeem (0 for unlimited)" value="${maxRedeem || 0}">` +
        `<label for="startDate" style="display:block; text-align:left; font-weight:bold; margin: 5px 0 0 0;">Start Date</label>` +
        `<input id="startDate" type="date" class="swal2-input" value="${startDate || ''}">` +
        `<label for="validUntil" style="display:block; text-align:left; font-weight:bold; margin: 5px 0 0 0;">Valid Until</label>` +
        `<input id="validUntil" type="date" class="swal2-input" value="${validUntil || ''}">`,
      focusConfirm: false,
      showCancelButton: true,
      confirmButtonText: 'Save Offer',
      cancelButtonText: 'Cancel',
      preConfirm: () => {
        const offerPercentage = Number(document.getElementById('offerPercentage').value);
        const maxRedeemVal = Number(document.getElementById('maxRedeem').value);
        const startDateVal = document.getElementById('startDate').value;
        const validUntilVal = document.getElementById('validUntil').value;

        if (!offerPercentage || offerPercentage < 1 || offerPercentage > 100) {
          Swal.showValidationMessage('Please enter a valid offer percentage between 1 and 100');
          return false;
        }
        if (maxRedeemVal < 0) {
          Swal.showValidationMessage('Max Redeem cannot be negative');
          return false;
        }
        if (!startDateVal || !validUntilVal || new Date(startDateVal) > new Date(validUntilVal)) {
          Swal.showValidationMessage('Invalid start or valid until dates');
          return false;
        }
        return { offerPercentage, maxRedeem: maxRedeemVal, startDate: startDateVal, validUntil: validUntilVal };
      }
    }).then((result) => {
      if (result.isConfirmed) {
        fetch('/admin/updateCategoryOffer', {
          method: 'PATCH',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            categoryId,
            offer: result.value.offerPercentage,
            maxRedeemable: result.value.maxRedeem,
            startDate: result.value.startDate,
            validUntil: result.value.validUntil
          })
        })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            Swal.fire('Success!', data.message || 'Offer saved successfully', 'success').then(() => location.reload());
          } else {
            Swal.fire('Error!', data.message || 'Failed to save offer', 'error');
          }
        })
        .catch(() => Swal.fire('Error!', 'Server error occurred', 'error'));
      }
    });
  }

  function deleteOffer(categoryId) {
    Swal.fire({
      title: 'Delete Offer',
      text: 'Are you sure you want to delete this offer?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#dc3545',
      cancelButtonColor: '#6c757d',
      confirmButtonText: 'Yes, delete it!',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch('/admin/deleteCategoryOffer', {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ categoryId })
        })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            Swal.fire('Deleted!', data.message, 'success').then(() => location.reload());
          } else {
            Swal.fire('Error!', data.message || 'Failed to delete offer', 'error');
          }
        })
        .catch(() => Swal.fire('Error!', 'Server error occurred', 'error'));
      }
    });
  }
</script>
</body>
</html>
